/**
 * 第三种模式：Publish/Subscribe发布与订阅模式<br/>
 *
 * 前面2个案例中，只有3个角色：<br/>
 *
 * > P：生产者，也就是要发送消息的程序<br/>
 * > C：消费者：消息的接受者，会一直等待消息到来。<br/>
 * > queue：消息队列，图中红色部分<br/>
 *
 *
 * 而在订阅模型中，多了一个exchange角色，而且过程略有变化：<br/>
 *
 * > P：生产者，也就是要发送消息的程序，但是不再发送到队列中，而是发给X（交换机）<br/>
 * > C：消费者，消息的接受者，会一直等待消息到来。<br/>
 * > Queue：消息队列，接收消息、缓存消息。<br/>
 * Exchange：交换机，一方面，接收生产者发送的消息。另一方面，知道如何处理消息，例如递交给某个特别队列、递交给所有队列、或是将消息丢弃。到底如何操作，取决于Exchange的类型。Exchange有常见以下3种类型：<br/>
 * >> Fanout：广播，将消息交给所有绑定到交换机的队列<br/>
 * >> Direct：定向，把消息交给符合指定routing key 的队列<br/>
 * >> Topic：通配符，把消息交给符合routing pattern（路由模式） 的队列<br/>
 *<br/>
 * Tips: Exchange（交换机）只负责转发消息，不具备存储消息的能力，因此如果没有任何队列与Exchange绑定，或者没有符合路由规则的队列，那么消息会丢失！<br/>
 * <p>
 *     发布订阅模式与工作队列模式的区别:<br/>
 *     1、工作队列模式不用定义交换机，而发布/订阅模式需要定义交换机。
 *      <br/>
 *     2、发布/订阅模式的生产方是面向交换机发送消息，工作队列模式的生产方是面向队列发送消息(底层使用默认交换机)。
 *<br/>
 *     3、发布/订阅模式需要设置队列和交换机的绑定，工作队列模式不需要设置，实际上工作队列模式会将队列绑 定到默认的交换机 。
 * </p>
 */
package com.itkjb.exercise.rabbitmq.mode.ps03;
